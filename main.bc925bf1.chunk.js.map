{"version":3,"sources":["firebase.js","features/userSlice.js","Header.js","SidebarOption.js","features/mailSlice.js","Sidebar.js","Section.js","EmailRow.js","EmailList.js","Mail.js","SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","type","placeholder","Avatar","style","cursor","photoUrl","onClick","signOut","then","SidebarOption","Icon","title","number","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Sidebar","useHistory","Button","startIcon","fontSize","InboxIcon","StarIcon","LabelImportantIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","Section","color","borderBottom","EmailRow","key","time","id","subject","description","history","push","Checkbox","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","PeopleIcon","LocalOfferIcon","message","timestamp","to","Date","seconds","toUTCString","Mail","SendMail","useForm","register","handleSubmit","errors","watch","onSubmit","formData","console","log","add","FieldValue","serverTimestamp","ref","required","autoComplete","variant","Login","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","SendMessageIsOpen","onAuthStateChanged","path","exact","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc925bf1.chunk.js","sourcesContent":["import firebase from 'firebase';\n//this is what that connects front-end with backend..\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDTXEdZmACHDjC3mZUc4BoNbBZxSNwaYgM\",\n    authDomain: \"clone-bd836.firebaseapp.com\",\n    projectId: \"clone-bd836\",\n    storageBucket: \"clone-bd836.appspot.com\",\n    messagingSenderId: \"970716237221\",\n    appId: \"1:970716237221:web:b4ba218f0a607327e42c4c\"\n};\nconst firebaseApp= firebase.initializeApp(firebaseConfig);\nconst db= firebase.firestore();\nconst auth= firebase.auth();\nconst provider= new firebase.auth.GoogleAuthProvider();\nexport {firebaseApp, db, auth, provider};","import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action)=>{\n      state.user= action.payload;\n    },\n    logout: state=>{\n        state.user= null;\n    }\n  },\n});\n\nexport const {login, logout} = userSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.user.value)`\nexport const selectUser= (state)=>state.user.user;\n\nexport default userSlice.reducer;\n","import React from 'react';\nimport './Header.css';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { IconButton, Avatar } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { auth } from './firebase';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {logout, selectUser} from './features/userSlice';\nconst Header=()=>{\n    const user= useSelector(selectUser);\n    const dispatch= useDispatch();\n    const signOut=()=>{\n        auth.signOut().then(()=>{\n            dispatch(logout());\n        })\n    }\n    return (\n        <div className= \"header\">\n            <div className= \"header__left\">\n                <IconButton>\n                    <MenuIcon/>\n                </IconButton>\n                <img src= \"https://i.pinimg.com/originals/ae/47/fa/ae47fa9a8fd263aa364018517020552d.png\" alt= \"\"></img>\n            </div>\n            <div className= \"header__middle\">\n                <SearchIcon></SearchIcon>\n                <input type= \"text\" placeholder= \"Search Mail\"></input>\n                <ArrowDropDownIcon className= \"header__inputCaret\" />\n            </div>\n            <div className= \"header__right\">\n            <IconButton>\n                <AppsIcon/>\n            </IconButton>\n            <IconButton>\n            <NotificationsIcon/> \n            </IconButton>\n            <Avatar style= {{cursor:\"pointer\"}} src= {user?.photoUrl} onClick= {signOut} />\n            </div>\n        </div>\n    );\n}\nexport default Header;","import React from 'react';\nimport './SidebarOption.css';\nconst SidebarOption=({Icon, title, number, selected})=>{\n    return (\n        <div className= {`sidebarOption ${selected&&\"sidebarOption--active\"}`}>\n            <Icon/>\n            <h3>{title}</h3>\n            <p>{number}</p>\n        </div>\n    );\n};\nexport default SidebarOption;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const mailSlice = createSlice({\n  name: 'mail',\n  initialState: {\n    selectedMail: null,\n    sendMessageIsOpen: false,\n  },\n  reducers: {\n    selectMail: (state, action)=>{\n      state.selectedMail= action.payload;\n    },\n    openSendMessage: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.sendMessageIsOpen =true;\n    },\n    closeSendMessage: state => {\n        state.sendMessageIsOpen =false;\n    },\n  },\n});\n\nexport const { selectMail, openSendMessage, closeSendMessage } = mailSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.mail.value)`\nexport const selectOpenMail= state => state.mail.selectedMail;\nexport const selectSendMessageIsOpen = state => state.mail.sendMessageIsOpen;\n\nexport default mailSlice.reducer;\n","import React from 'react';\nimport './Sidebar.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport {Button} from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport StarIcon from '@material-ui/icons/Star';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport SidebarOption from './SidebarOption';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { IconButton, Avatar } from '@material-ui/core';\nimport NoteIcon from '@material-ui/icons/Note';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NearMeIcon from '@material-ui/icons/NearMe';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport DuoIcon from '@material-ui/icons/Duo';\nimport {useHistory} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { openSendMessage, closeSendMessage} from './features/mailSlice';\nconst Sidebar=()=>{\n    const dispatch= useDispatch();\n    const history= useHistory();\n    return (\n        <div className= \"sidebar\">\n            <Button onClick={()=>dispatch(openSendMessage())} startIcon= {<AddIcon fontSize= \"large\"/>} className= \"sidebar__compose\">COMPOSE</Button>\n            <SidebarOption Icon= {InboxIcon} title= \"Inbox\" number= {20} selected= {true}/>\n            <SidebarOption Icon= {StarIcon} title= \"Starred\" number= {20} selected= {false}/>\n            <SidebarOption Icon= {LabelImportantIcon} title= \"Important\" number= {20} selected= {false}/>\n            <SidebarOption Icon= {NearMeIcon} title= \"Sent\" number= {20} selected= {false}/>\n            <SidebarOption Icon= {NoteIcon} title= \"Drafts\" number= {20} selected= {false}/>\n            <SidebarOption Icon= {ExpandMoreIcon} title= \"More\" number= {20} selected= {false}/>\n            <div className= \"sidebar__footer\">\n                    <div className= \"sidebar__footerIcons\">\n                        <IconButton>\n                            <PersonIcon />\n                        </IconButton>\n                        <IconButton>\n                            <DuoIcon />\n                        </IconButton>\n                        <IconButton>\n                            <PhoneIcon />\n                        </IconButton>\n                    </div>\n            </div>\n        </div>\n\n    );\n};\nexport default Sidebar;","import React from 'react';\nimport './Section.css';\nimport {IconButton} from '@material-ui/core';\nfunction Section({title, Icon, selected, color}){\n    return (\n        <div className= {`section ${selected&&\"section--selected\"}`}\n        style= {{\n            borderBottom: `3px solid ${color}`,\n            color: `${selected&&color}`\n        }}\n        >\n        <Icon/>\n        <h4>{title}</h4>\n        </div>\n    );\n};\nexport default Section;","import React from 'react';\nimport \"./EmailRow.css\";\nimport { Checkbox, IconButton} from '@material-ui/core';\nimport  StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\nimport {useHistory} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectMail} from './features/mailSlice';\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\nfunction EmailRow({key, time, id, title, subject, description}){\n    const history= useHistory();\n    const dispatch= useDispatch();\n    const openMail=()=>{\n        dispatch(selectMail({\n            time,\n            id,\n            title,\n            subject,\n            description\n        }));\n        history.push('/mail')\n    }\n    return (\n        <div onClick= {openMail} className= \"emailRow\">\n            <div className= \"emailRow__options\">\n                <Checkbox />\n                <IconButton>\n                    <StarBorderOutlinedIcon />\n                </IconButton>\n                <IconButton>\n                    <LabelImportantOutlinedIcon />\n                </IconButton>\n            </div>\n            <h3 className= \"emailRow__title\">{title}</h3>\n            <div className= \"emailRow__message\">\n                <h4>\n                    {subject}{\" \"}\n                    <span className= \"emailRow__description\">-{description}</span>\n                </h4>\n            </div>\n            <p className= \"emailRow__time\">{time}</p>\n        </div>\n    );\n}\nexport default EmailRow;","import React, { useState, useEffect } from 'react';\nimport './EmailList.css';\nimport { Checkbox, IconButton } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport Section from './Section';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport EmailRow from './EmailRow';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PeopleIcon from '@material-ui/icons/People';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport { db } from './firebase';\nfunction EmailList(){\n    const [emails, setEmails]= useState([]);\n    useEffect(()=>{\n        db.collection('emails').orderBy('timestamp', 'desc').\n        onSnapshot(snapshot=> setEmails(snapshot.docs.map(doc=>({\n            id: doc.id,\n            data: doc.data(),\n        }))))\n    }, []);\n    return (\n        <div className= \"emailList\">\n\n            <div className= \"emailList__settings\">\n                <div className= \"emailList__settingsLeft\">\n                    <Checkbox />\n                    <IconButton><ArrowDropDownIcon/></IconButton>\n                    <IconButton><RedoIcon/></IconButton>\n                    <IconButton><MoreVertIcon/></IconButton>\n                </div>\n                <div className= \"emailList__settingsRight\">\n                    <IconButton>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChevronRightIcon />\n                    </IconButton>\n                    <IconButton>\n                        <KeyboardHideIcon />\n                    </IconButton>\n                    <IconButton>\n                        <SettingsIcon />\n                    </IconButton>\n                </div>\n            </div>\n            <div className= \"emailList__sections\">\n                <Section title= \"Primary\" Icon= {InboxIcon} selected= {true} color= \"red\" />\n                <Section title= \"Social\" Icon= {PeopleIcon} selected= {false} color= \"#1A73E8\" />\n                <Section title= \"Promotions\" Icon= {LocalOfferIcon} selected= {false} color= \"green\" />\n            </div>\n            <div className= \"emailList__list\">\n                {emails.map(({id, data: {message, subject, timestamp, to}})=>(\n                    <EmailRow\n                        key= {id}\n                        id= {id}\n                        title= {to}\n                        description= {message}\n                        time= {new Date(timestamp?.seconds*1000).toUTCString()}\n                        subject= {subject}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\nexport default EmailList;","import React from 'react';\nimport './Mail.css';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { IconButton } from '@material-ui/core';\nimport {useHistory} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport PrintIcon from '@material-ui/icons/Print';\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\nimport {selectOpenMail} from './features/mailSlice';\nfunction Mail(){\n    const history= useHistory();\n    const selectedMail= useSelector(selectOpenMail);\n    return (\n        <div className= \"mail\">\n            <div className= \"mail__tools\">\n                <div className= \"mail__toolsLeft\">\n                    <IconButton onClick= {()=>history.push('/')}> <ArrowBackIcon /></IconButton>\n                    <IconButton> <MoveToInboxIcon /></IconButton>\n                    <IconButton><ErrorIcon /></IconButton>\n                    <IconButton><DeleteIcon /></IconButton>\n                    <IconButton><EmailIcon /></IconButton>\n                    <IconButton><WatchLaterIcon /></IconButton>\n                    <IconButton><CheckCircleIcon /></IconButton>\n                    <IconButton><LabelImportantIcon /></IconButton>\n                    <IconButton><MoreVertIcon /></IconButton>\n                </div>\n                <div className= \"mail__toolsRight\">\n                    <IconButton><UnfoldMoreIcon/></IconButton>\n                    <IconButton><PrintIcon/></IconButton>\n                    <IconButton><ExitToAppIcon/></IconButton>\n                </div>\n            </div>\n            <div className= \"mail__body\">\n                <div className= \"mail__bodyHeader\">\n                <h2>{selectedMail?.subject}</h2>\n                <LabelImportantIcon className= \"mail__important\" />\n                <p>{selectedMail?.title}</p>\n                <p className= \"mail__time\">{selectedMail?.time}</p>\n                </div>\n                <div className= \"mail__message\">\n                <p>{selectedMail?.description}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Mail;","import React from 'react';\nimport './SendMail.css';\nimport {Button} from '@material-ui/core';\nimport {useForm} from 'react-hook-form';\nimport {useDispatch} from 'react-redux';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {closeSendMessage} from './features/mailSlice';\nimport { db } from './firebase';\nimport firebase from 'firebase';\nfunction SendMail(){\n    const {register, handleSubmit, watch, errors}= useForm();\n    const dispatch= useDispatch();\n    const onSubmit=(formData)=>{\n        console.log(formData);\n        db.collection('emails').add({\n            to: formData.to,\n            subject: formData.subject,\n            message: formData.message,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n        dispatch(closeSendMessage());\n    };\n    return (\n        <div className= \"sendMail\">\n            <div className= \"sendMail__header\">\n                <h3>New message</h3>\n                <CloseIcon className= \"sendMail__close\"  onClick= {()=>dispatch(closeSendMessage())}/>\n            </div>\n            <form onSubmit= {handleSubmit(onSubmit)}>\n                <input name= \"to\" placeholder= \"To : \" type= \"email\" ref= {register({required: true})} autoComplete= \"off\"/>\n                {errors.to&&<p className= \"sendMail__error\">To field is required ! </p>}\n                <input name= \"subject\" placeholder= \"Subject : \" type= \"text\" ref= {register({required: true})}  autoComplete= \"off\"/>\n                {errors.subject&&<p className= \"sendMail__error\">Subject field is required ! </p>}\n                <input name= \"message\" placeholder= \"Message : \" className= \"sendMail__message\" type= \"text\" ref= {register({required: true})}  autoComplete= \"off\"/>\n                {errors.message&&<p className= \"sendMail__error\">Message field is required ! </p>}\n                <div className= \"sendMail__options\">\n                    <Button\n                    className= \"sendMail__send\"\n                    variant= \"contained\"\n                    color= \"primary\"\n                    type=\"submit\"\n                    >Send</Button>\n                </div>\n            </form>\n        </div>\n    );\n}\nexport default SendMail;","import React, { useEffect } from 'react';\nimport './Login.css';\nimport {Button} from '@material-ui/core';\nimport {useDispatch} from 'react-redux';\nimport { auth, provider } from './firebase';\nimport { login } from './features/userSlice';\nfunction Login(){\n    const dispatch= useDispatch();\n    const signIn=()=>{\n       auth.signInWithPopup(provider).then(({user})=>{\n           dispatch(login({\n               displayName: user.displayName,\n               email: user.email,\n               photoUrl: user.photoURL\n           }));\n       }).catch((error)=>{\n           alert(error.message);\n       })\n    }\n    return (\n        <div className= \"login\">\n            <div className= \"login__container\">\n                <img src= \"https://static.dezeen.com/uploads/2020/10/gmail-google-logo-rebrand-workspace-design_dezeen_2364_col_0.jpg\" alt= \"\" />\n                <Button variant= \"contained\" color= \"primary\"  onClick= {signIn}>SIGN IN</Button>\n            </div>\n        </div>\n    );\n}\nexport default Login;","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport EmailList from './EmailList';\r\nimport Mail from './Mail';\r\nimport SendMail from './SendMail';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {selectSendMessageIsOpen} from './features/mailSlice';\r\nimport {selectUser, login, logout} from './features/userSlice';\r\nimport Login from './Login';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { auth } from './firebase';\r\nfunction App() {\r\n  const SendMessageIsOpen= useSelector(selectSendMessageIsOpen);\r\n  const user= useSelector(selectUser);\r\n  const dispatch= useDispatch();\r\n  useEffect(()=>{\r\n    auth.onAuthStateChanged(user=>{\r\n      if(user){\r\n        dispatch(login({\r\n          displayName: user.displayName,\r\n          email: user.email,\r\n          photoUrl: user.photoURL\r\n        }))\r\n      }\r\n      else{\r\n        dispatch(logout(user));\r\n      }\r\n    })\r\n  }, []);\r\n  return (\r\n    <Router>\r\n      {!user ?(<Login />):\r\n        (<div className=\"app\">\r\n          <Header/>\r\n          <div className= \"app__body\">\r\n            <Sidebar />\r\n            <Switch>\r\n              <Route path exact = \"/\">\r\n                <EmailList />\r\n              </Route>\r\n              <Route path= \"/mail\">\r\n                <Mail />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n          {SendMessageIsOpen&&<SendMail/>}\r\n        </div>)\r\n      }\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport mailReducer from '../features/mailSlice';\r\nimport userReducer from '../features/userSlice';\r\nexport default configureStore({\r\n  reducer: {\r\n    mail: mailReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}